

services:
  web:
    build: .
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
      - ./media:/code/media
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    environment:
      - DEBUG=1
      - POSTGRES_DB=feedback_report
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432

  postgres:
    image: postgres:16
    container_name: postgres_db
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      POSTGRES_DB: feedback_report
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis_broker
    ports:
      - "6379:6379"
    restart: unless-stopped

  worker:
    build: .
    container_name: celery_worker
    command: celery -A feedback_report worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - web
      - redis
    restart: unless-stopped
    environment:
      - POSTGRES_DB=feedback_report
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432

  flower:
    build: .
    container_name: flower_monitor
    command: celery -A feedback_report flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - web
      - worker
    restart: unless-stopped
    environment:
      - POSTGRES_DB=feedback_report
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432

volumes:
  pgdata:

